*Cambiar tablas de migracion a plurales, para funcionar bien con los modelos y seeders

1º hay que crear los modelos con la primera letra en mayuscula y singular
 que hace referencia a la migración en minuscula y plural ejemplo -> User(model)->users(migracion)



2ºhacer los seeders en DataBaseSeeder se debería poner todas las conexiones a otros seeders con use y se
 declaran en el run()// en el terminal o llamamos al general donde metemos todos 'php artisan db:seed' o 
 a un seeder en concreto 'php artisan db:seed --class=NombreSeeder'

3º crear las factories (son para crear datos aleatorios de prueba)
 'php artisan make:factory NombretablaFactoy' dentro se define el modelo sore el que va a trabajar 'App\Models\NombreSeeder'
 y sobre esa tabla mete cosas random


Con tinker puedes ver los datos de la base de datos, hacer consultas,
meter cosas, etc...  consulta ejemplo-> $usuario = User::where('name',''Pepe)->get();

LA MOSTRAR LOS DATOS EN LAS VISTAS EN NECESARIO LLAMAR AL MODELO EN EL CONTROLADOR

Los datos tienen que pasar de Web a Controlador, en este hace la peticion de datos la base de 
datos (debemos añadir el use\modelo... al controlador):
        public function __invoke()
            {
                $users = User::all();
                return view('index',compact('users'));
            }
Este controlador envia los datos a la vista principal y despues se la asignamos al 
componente correspondiente (:users="$users"). Dentro de la clase se envian los datos 
directamente gracias a la función render() y podemos meter otras funciones
    web>Controlador>vista>componente.php(clase)>contenido-componente.blade.php

**Cuando se usan componentes las funciones propias junto a la lógica va en la clase del componente,
    no en el controlador (aunque se podría también). Cuando pasamos datos de BD, el controlador ya 
    nos los devuelve tratados como un string o array de string.

**Si no usamos controladores la lógica y funciones van el controlador

